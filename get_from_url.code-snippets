{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }


	"Get from Url (API)": {
		"prefix": "get-url",
		"body": [
			"var url = Uri.https(BASE_URL, END_POINT);",
            "var response = await http.get(url);",
			"/* convierte string en json(MAP) */",
			"final Map<String, dynamic> map = json.decode(response.body);"
		],
		"description": "Modelo obtener API con url"
	},
	"Post Data from Url (API)": {
		"prefix": "post-url",
		"body": [

			"var url = Uri.https(BASE_URLl, END_POINT + PLACE",
            "var response = await http.put(url, body: ELEMNTO.toJson());",
            "final decodedData = response.body;",
        

			
		],
		"description": "Modelo post API con url"
	},
	"Post Img from Url (API)": {
		"prefix": "post-img-url",
		"body": [

		"final url = Uri.parse(PETICION_API_POST);",

        "final imageUploadRequest = http.MultipartRequest('POST', url);",

        "final FILE = await http.MultipartFile.fromPath('file', PATH_IMAGEN);",
    
        "imageUploadRequest.files.add(FILE);",
    
        "final streamResponse = await imageUploadRequest.send();",
        
	    "final resp = await http.Response.fromStream(streamResponse);",
    
        "if (resp.statusCode != 200 && resp.statusCode != 201) {",
          "return null;",
	    		"}",
        "final decodeData = json.decode(resp.body);",
    

			
		],
		"description": "Modelo post de imagen "
	},
}